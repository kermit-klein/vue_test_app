let data1 =
  "class Api::V1::OrdersController < ApplicationController \n  def create \n    user = User.find_by(email: params[:user]) \n    order = Order.create(user: user) \n    order.order_items.create(menu_item_id: params[:menu_item]) \n    render json: create_json_response(order)    \n  end    \n  def update\n    order = Order.find(params[:id]) # Update action needs to get email params from frontend just like create action\n    case params[:activity]\n    when 'finalize'\n      if !order.user.nil?\n        order.update_attribute(:finalized, true)\n        render json: { message: 'Your order will be ready in 30 minutes!' }\n      else\n        render json: { message: 'You need to be logged in' }\n      end\n    when 'login'\n      order.update_attribute(:user_id, params[:user])\n      render json: { message: 'User added to order' }\n    else\n      menu_item = MenuItem.find(params[:menu_item])\n      order.order_items.create(menu_item: menu_item)     \n      render json: create_json_response(order)\n    end\n  end\n  private\n  def create_json_response(order)    \n    json = { order: OrderSerializer.new(order) }\n    json.merge!(message: 'Item added to order')\n  end\nend";
let data2 =
  "class Api::V0::PingsController < ApplicationController \n  def index \n    render json: { message: 'Pong' } \n  end \nend";
export { data1, data2 };
